version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: erp_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-erp_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-erp_password}
      POSTGRES_DB: ${POSTGRES_DB:-erp_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - erp_network

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: erp_api
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-erp_user}:${POSTGRES_PASSWORD:-erp_password}@db:5432/${POSTGRES_DB:-erp_db}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-super-secret-jwt-key}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - erp_network

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: erp_web
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000
    command: npm run dev
    networks:
      - erp_network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: erp_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - erp_network

volumes:
  postgres_data:

networks:
  erp_network:
    driver: bridge